-- Criação do banco de dados para o cenário de E commerce

-- drop database ecommerce;


create database ecommerce;


use ecommerce;



-- criando as tabelas

create table clientpf(
	idClientpf int auto_increment primary key,

    Fname varchar(10),

    Minit varchar(3),
    
Lname varchar(20),
    
CPF char(11) not null,
	
Address varchar(80),
    
Contact varchar(11),
    
constraint unique_cpf_client unique (CPF)

);



create table clientpj(

	idClientpj int auto_increment primary key,

    Socialname varchar(255),

    CNPJ char(15) not null,

	Address varchar(80),

    Contact varchar(11),

    constraint unique_clientpj_cnpj unique (CNPJ)

);



create table product(

	idProduct int auto_increment primary key,

    Pname varchar(40) not null,

    Classification_kids bool default false,

    Category enum('Eletrônicos','Vestuário','Brinquedos','Alimentos','Móveis')not null,

    Avaliação float default 0,

    Size varchar(20),

    price float not null

);



create table payment(

	idpayClientpf int,

    idpayClientpj int,

    idPayment int auto_increment primary key,

    typePayment enum('cartão de crédito', 'paypal'),

    cardname varchar(40) not null,

    cardnumber char(16) not null,

    cardexpiredate date not null,

    constraint fk_payment_client_pf foreign key (idpayClientpf) references clientpf(idClientpf),

    constraint fk_payment_client_pj foreign key (idpayClientpj) references clientpj(idClientpj),

    constraint unique_cardnumber unique (cardnumber),

    constraint unique_idPayment unique (idPayment)

);




create table orders(

	idOrder int auto_increment primary key,

    idOrderClientpf int,

    idOrderClientpj int,

    orderStatus enum('Cancelado','Confirmado','em Processamento') not null default 'Em processamento',

    orderDescription varchar(255),

    sendValue float default 10,

    paymentCash bool default false,

    idPayment int,

    constraint fk_order_payment foreign key (idpayment) references payment(idPayment),

    constraint fk_order_clientpf foreign key (idOrderClientpf) references clientpf(idclientpf),

    constraint fk_order_clientpj foreign key (idOrderClientpj) references clientpj(idclientpj)

);



create table storagelocation(

	idProdStorage int auto_increment primary key,

    storageLocation varchar(255),

    quantity int default 0    

);



create table supplier(

	idSupllier int auto_increment primary key,

    SocialName varchar(255) not null,

    CNPJ char(15) not null,

    Contact varchar(11) not null,

    constraint unique_supplier unique (CNPJ)

);



create table seller(

	idSeller int auto_increment primary key,

    SocialName varchar(255) not null,

    CNPJ char(15),
    CPF char(11),

    TradeName varchar(255),

    Contact varchar(11) not null,

    constraint unique_CNPJ_supplier unique (CNPJ),

    constraint unique_CPF_supplier unique (CPF)

);



create table delivery(

	idDelivery int auto_increment primary key,

    idOrderDel int,
    trackcod char(13) not null,

    delStatus enum('Em preparação para coleta','Na transportadora','Saiu para entrega','Entregue') default 'Em preparação para coleta',

    constraint unique_trackcod unique (trackcod),

    constraint fk_delivery_order foreign key (idOrderDel) references orders(idOrder)

);



create table productSeller(

	idPseller int,

    idPproduct int,

    prodQuantity int default 1,

    primary key (idPseller, idPproduct),

    constraint fk_product_seller foreign key (idPseller) references seller(idSeller),

    constraint fk_product_prodseller foreign key (idPproduct) references product(idProduct)

);



create table productSupplier(

	idPsSupplier int,

    idPsproduct int,

    Quantity int not null,

    primary key (idPsSupplier, idPsproduct),

    constraint fk_product_supplier foreign key (idPsSupplier) references supplier(idSupllier),

    constraint fk_product_prodsupplier foreign key (idPsproduct) references product(idProduct)

);



create table productOrder(

	idPOproduct int,

    idPOorder int,

    poQuantity int default 1,

    poStatus enum('Disponível','Sem estoque') default 'Disponível',

    primary key (idPOproduct, idPOorder),

    constraint fk_product_order foreign key (idPOorder) references orders(idOrder),

    constraint fk_product_prodorder foreign key (idPOproduct) references product(idProduct)

);



create table productStorage(

	idPSproduct int,

    idPSstorage int,

    psQuantity int default 0,

    poStatus enum('Disponível','Sem estoque') default 'Sem estoque',

    primary key (idPSproduct, idPSstorage),

    constraint fk_product_storage foreign key (idPSstorage) references storagelocation(idProdStorage),

    constraint fk_product_prodstorage foreign key (idPSproduct) references product(idProduct)

);
